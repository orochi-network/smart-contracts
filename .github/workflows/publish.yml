name: Publish Orochi Smart Contracts
on:
  push:
    branches: ['main']

env:
  NPM_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}

jobs:
  publish:
    name: Build & Publish package
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [22.x]
    permissions:
      contents: read
      id-token: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
      - name: Prepare environment
        env:
          DEV_ENV_VARS: ${{ secrets.DEV_ENV_VARS }}
        run: echo $DEV_ENV_VARS | base64 -d >> .env
      - name: Install compare-versions package
        run: yarn add -D compare-versions@6.1.0
      - name: Publish smart contracts
        env:
          NPM_TOKEN: ${{ env.NPM_TOKEN }}
        run: |
          echo "//registry.npmjs.org/:_authToken=\${NPM_TOKEN}" > ~/.npmrc
          cd ./package 
          PACKAGE_NAME=$(node -p "require('./package.json').name")
          NPM_VERSION=$(npm show "$PACKAGE_NAME" version 2>/dev/null || echo 0.0.0)
          PACKAGE_VERSION=$(node -p "require('./package.json').version")

          echo "NPM_VERSION = " $NPM_VERSION
          echo "PACKAGE_VERSION = " $PACKAGE_VERSION 

          VERSION_COMPARE=$(node -e "
            const compare = require('compare-versions');
            const npmVersion = '$NPM_VERSION';
            const packageVersion = '$PACKAGE_VERSION';
            if (compare.compareVersions(packageVersion, npmVersion) === 1) {
              console.log('true');
            } else {
              console.log('false');
            }
          ")

          if [ "$VERSION_COMPARE" = "false" ]; then
            echo "Ignore ${PACKAGE_NAME} since no changes"
          else
            cd ../
            yarn
            yarn run build
            cd ./package
            npm run release
          fi
